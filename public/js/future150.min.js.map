{"version":3,"sources":["../public/app/app.module.js","../public/app/app.config.js","../public/app/app.routes.js","../public/app/app.run.js","../public/app/article/article.controller.js","../public/app/authentication/authentication.service.js","../public/app/authentication/authenticationInterceptor.factory.js","../public/app/camps/camp.controller.js","../public/app/camps/camps.controller.js","../public/app/colleges/college.controller.js","../public/app/colleges/colleges.controller.js","../public/app/colleges/colleges.service.js","../public/app/common/errSrc.directive.js","../public/app/contactUs/contactUs.controller.js","../public/app/contactUs/contacts.service.js","../public/app/events/eventRegister.controller.js","../public/app/events/events.service.js","../public/app/footer/footer.controller.js","../public/app/home/home.controller.js","../public/app/login/login.controller.js","../public/app/messageBoards/messageBoards.controller.js","../public/app/messageBoards/messageBoards.service.js","../public/app/messageBoards/thread.controller.js","../public/app/navigation/navigation.controller.js","../public/app/navigation/topNavigation.controller.js","../public/app/news/articles.service.js","../public/app/news/news.controller.js","../public/app/profile/players.service.js","../public/app/profile/profile.controller.js","../public/app/rankings/rankings.controller.js","../public/app/rankings/rankings.service.js","../public/app/register/register.controller.js","../public/app/search/search.controller.js","../public/app/shop/buyProduct.controller.js","../public/app/shop/product.controller.js","../public/app/shop/products.service.js","../public/app/shop/shop.controller.js","../public/app/tournaments/tournament.controller.js","../public/app/tournaments/tournaments.controller.js","../public/app/videos/videos.controller.js","../public/app/videos/videos.service.js"],"names":["angular","module","config","$httpProvider","interceptors","push","constant","baseApiUrl","siteTwitterHandle","siteTitle","siteDescription","defaultProfileImageUrl","defaultArticleImageUrl","defaultProductImageUrl","defaultCollegeImageUrl","path","name","$inject","$stateProvider","$urlRouterProvider","$locationProvider","otherwise","state","url","abstract","template","templateUrl","controller","controllerAs","html5Mode","hashPrefix","run","$rootScope","$location","$filter","sites","twitterHandle","title","description","absUrl","$on","event","toState","toParams","site","selectedSite","articleController","$state","$sce","articlesService","vm","this","params","slug","getBySlug","then","article","featuredImageUrl","imageUrl","body","trustAsHtml","authenticationService","$http","localStorageService","login","user","post","result","set","data","token","updateCurrentUser","logout","remove","getCurrentUser","get","profileImageUrl","isAuthenticated","getAuthToken","service","factory","authenticationInterceptor","$injector","request","headers","Authorization","campController","eventsService","camp","campsController","$scope","activate","getCamps","page","pageSize","camps","events","count","$watchGroup","collegeController","collegesService","rankingsService","selectRankings","id","getById","ranking","selectedRanking","college","getAll","rankings","collegesController","colleges","q","directive","link","scope","element","attrs","bind","src","errSrc","$set","contactUsController","contactsService","contacts","eventRegisterController","eventType","getTournaments","getUpcomingEvents","upcomingEvents","footerController","latestArticles","articles","homeController","videosService","playersService","getFeaturedArticle","featuredArticle","getHighlighedArticles","highlighedArticles","getTopVideos","topVideos","getTrendingPlayers","trendingPlayers","isArray","forEach","player","selectEvents","type","selectVideos","sort","selectTrending","loginController","go","messageBoardsController","messageBoardsService","getAllThreads","threads","messageBoardThreads","getThreadBySlug","threadController","thread","navigationController","campsCount","tournamentsCount","search","topNavigationController","$watch","newValue","oldValue","newsController","isLoading","profileController","views","likes","followers","shares","notes","rankingsController","registerController","register","searchController","$stateParams","players","buyProductController","productsService","product","productController","shopController","products","tournamentController","tournament","tournamentsController","tournaments","videosController","videos"],"mappings":"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","file":"future150.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('future150', ['ui.router', 'ui.bootstrap', 'youtube-embed',\n      'angulartics', 'angulartics.google.analytics', 'LocalStorageModule']);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .constant('config', {\n      baseApiUrl: '',\n      siteTwitterHandle: '@future150',\n      siteTitle: 'Basketball Recruiting News with Player Rankings & Profiles',\n      siteDescription: 'The best source for college basketball recruiting, class rankings and elite player profiles. Discover which high school players are the hottest recruits.',\n      defaultProfileImageUrl: '//www.clker.com/cliparts/C/N/O/F/T/X/blank-profile-hi.png',\n      defaultArticleImageUrl: '//placehold.it/643x341?text=No Image',\n      defaultProductImageUrl: '//placehold.it/60x60?text=No Image',\n      defaultCollegeImageUrl: '//placehold.it/60x60?text=No Image'\n    })\n    .constant('sites', [\n      {\n        path: 'hs',\n        name: 'Mens'\n      },\n      {\n        path: 'girls',\n        name: 'Womens'\n      },\n      {\n        path: 'jr',\n        name: 'Junior'\n      }\n    ]);\n\n  angular\n    .module('future150')\n    .config(config);\n\n  config.$inject = ['$httpProvider'];\n\n  function config($httpProvider) {\n    $httpProvider.interceptors.push('authenticationInterceptor');\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function($stateProvider, $urlRouterProvider, $locationProvider) {\n      $urlRouterProvider.otherwise('/hs/');\n\n      $stateProvider\n        .state('site', {\n          url: '/:site',\n          abstract: true,\n          template: '<ui-view></ui-view>'\n        });\n\n      $stateProvider\n        .state('site.home', {\n          url: '/',\n          templateUrl: '/app/home/homeView.html',\n          controller: 'homeController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('login', {\n          url: '/login',\n          templateUrl: '/app/login/loginView.html',\n          controller: 'loginController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('register', {\n          url: '/register',\n          templateUrl: '/app/register/registerView.html',\n          controller: 'registerController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('account', {\n          url: '/account',\n          abstract: true,\n          templateUrl: '/app/account/accountView.html'\n        });\n\n      $stateProvider\n        .state('account.personal', {\n          url: '/personal',\n          templateUrl: '/app/account/personalView.html'\n        });\n\n      $stateProvider\n        .state('account.settings', {\n          url: '/settings',\n          templateUrl: '/app/account/settingsView.html'\n        });\n\n      $stateProvider\n        .state('account.billing', {\n          url: '/billing',\n          templateUrl: '/app/account/billingView.html'\n        });\n\n      $stateProvider\n        .state('pricing', {\n          url: '/pricing',\n          templateUrl: '/app/pricing/pricing.html'\n        });\n\n      $stateProvider\n        .state('camps', {\n          url: '/camps',\n          templateUrl: '/app/camps/campsView.html',\n          controller: 'campsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('camp', {\n          url: '/camp/:slug',\n          templateUrl: '/app/camps/campView.html',\n          controller: 'campController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('registerCamp', {\n          url: '/camp/:slug/register',\n          templateUrl: '/app/events/eventRegisterView.html',\n          controller: 'eventRegisterController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('tournaments', {\n          url: '/tournaments',\n          templateUrl: '/app/tournaments/tournamentsView.html',\n          controller: 'tournamentsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('tournament', {\n          url: '/tournament/:slug',\n          templateUrl: '/app/tournaments/tournamentView.html',\n          controller: 'tournamentController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('registerTournament', {\n          url: '/tournament/:slug/register',\n          templateUrl: '/app/tournaments/registerTournamentView.html',\n          controller: 'eventRegisterController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('submitTournamentRoster', {\n          url: '/tournament/:slug/submitRoster',\n          templateUrl: '/app/tournaments/submitTournamentRoster.html'\n        });\n\n      $stateProvider\n        .state('contactUs', {\n          url: '/contact-us',\n          templateUrl: '/app/contactUs/contactUsView.html',\n          controller: 'contactUsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('shop', {\n          url: '/shop',\n          templateUrl: '/app/shop/shopView.html',\n          controller: 'shopController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('product', {\n          url: '/product/:slug',\n          templateUrl: '/app/shop/productView.html',\n          controller: 'productController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('buyProduct', {\n          url: '/product/:slug/buy',\n          templateUrl: '/app/shop/buyProductView.html',\n          controller: 'buyProductController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('site.news', {\n          url: '/news',\n          templateUrl: '/app/news/newsView.html',\n          controller: 'newsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('article', {\n          url: '/article/:slug',\n          templateUrl: '/app/article/articleView.html',\n          controller: 'articleController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('messageBoards', {\n          url: '/message-boards',\n          templateUrl: '/app/messageBoards/messageBoardsView.html',\n          controller: 'messageBoardsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('messageBoardThread', {\n          url: '/message-boards/:slug',\n          templateUrl: '/app/messageBoards/threadView.html',\n          controller: 'threadController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('videos', {\n          url: '/videos',\n          templateUrl: '/app/videos/videosView.html',\n          controller: 'videosController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('profile', {\n          url: '/profile/:slug',\n          templateUrl: '/app/profile/profileView.html',\n          controller: 'profileController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('rankings', {\n          url: '/rankings/:type',\n          templateUrl: '/app/rankings/rankingsView.html',\n          controller: 'rankingsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('trendingPlayers', {\n          url: '/trendingPlayers',\n          templateUrl: '/app/trendingPlayers/trendingPlayersView.html'\n        });\n\n      $stateProvider\n        .state('colleges', {\n          url: '/colleges',\n          templateUrl: '/app/colleges/collegesView.html',\n          controller: 'collegesController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('college', {\n          url: '/college/:slug',\n          templateUrl: '/app/colleges/collegeView.html',\n          controller: 'collegeController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('search', {\n          url: '/search?q',\n          templateUrl: '/app/search/searchView.html',\n          controller: 'searchController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('aauTeams', {\n          url: '/aauTeams',\n          templateUrl: '/app/aauTeams/aauTeamsView.html'\n        });\n\n      $stateProvider\n        .state('alumni', {\n          url: '/alumni',\n          templateUrl: '/app/alumni/alumniView.html'\n        });\n\n      $stateProvider\n        .state('collegeExposurePack', {\n          url: '/collegeExposurePack',\n          templateUrl: '/app/collegeExposurePack/collegeExposurePackView.html'\n        });\n\n      $stateProvider\n        .state('submitPlayerInfo', {\n          url: '/submitPlayerInfo',\n          templateUrl: '/app/submitPlayerInfo/submitPlayerInfo.html'\n        });\n\n      $stateProvider\n        .state('submitPlayerVideo', {\n          url: '/submitPlayerVideo',\n          templateUrl: '/app/submitPlayerVideo/submitPlayerVideo.html'\n        });\n\n      $locationProvider.html5Mode(true);\n      $locationProvider.hashPrefix('!');\n    }]);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .run(run);\n\n  run.$inject = ['$rootScope', '$location', '$filter', 'config', 'sites'];\n\n  function run($rootScope, $location, $filter, config, sites) {\n    $rootScope.twitterHandle = config.siteTwitterHandle;\n    $rootScope.title = config.siteTitle;\n    $rootScope.description = config.siteDescription;\n    $rootScope.url = $location.absUrl();\n    $rootScope.defaultProfileImageUrl = config.defaultProfileImageUrl;\n    $rootScope.defaultArticleImageUrl = config.defaultArticleImageUrl;\n    $rootScope.defaultProductImageUrl = config.defaultProductImageUrl;\n    $rootScope.defaultCollegeImageUrl = config.defaultCollegeImageUrl;\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n      $rootScope.site = toParams.site;\n      $rootScope.selectedSite = $filter('filter')(sites, { path: toParams.site })[0];\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('articleController', articleController);\n\n  articleController.$inject = ['$state', '$rootScope', '$sce', 'articlesService'];\n\n  function articleController($state, $rootScope, $sce, articlesService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      articlesService.getBySlug($state.params.slug).then(function(article) {\n        $rootScope.title = article.title;\n        $rootScope.description = article.description;\n        $rootScope.featuredImageUrl = article.imageUrl;\n\n        article.body = $sce.trustAsHtml(article.body);\n        vm.article = article;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('authenticationService', authenticationService);\n\n  authenticationService.$inject = ['$http', 'config', 'localStorageService'];\n\n  function authenticationService($http, config, localStorageService) {\n    var user;\n\n    var service = {\n      login: login,\n      logout: logout,\n      getCurrentUser: getCurrentUser,\n      isAuthenticated: isAuthenticated,\n      getAuthToken: getAuthToken\n    };\n    return service;\n\n    function login(user) {\n      return $http.post(config.baseApiUrl + '/token', user).then(function(result) {\n        localStorageService.set('token', result.data.token);\n        return updateCurrentUser();\n      });\n    }\n\n    function logout() {\n      localStorageService.remove('token');\n      localStorageService.remove('user');\n    }\n\n    function getCurrentUser() {\n      return localStorageService.get('user');\n    }\n\n    function updateCurrentUser() {\n      return $http.get(config.baseApiUrl + '/profile').then(function(result) {\n        result.data.user.profileImageUrl = result.data.user.profileImageUrl || config.defaultProfileImageUrl;\n        localStorageService.set('user', result.data.user);\n      });\n    }\n\n    function isAuthenticated() {\n      return !!getCurrentUser();\n    }\n\n    function getAuthToken() {\n      return localStorageService.get('token');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('authenticationInterceptor', authenticationInterceptor);\n\n  authenticationInterceptor.$inject = ['$injector'];\n\n  function authenticationInterceptor($injector) {\n    return {\n      request: function(config) {\n        var authenticationService = $injector.get('authenticationService'),\n          token = authenticationService.getAuthToken();\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n        return config;\n      }\n    };\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('campController', campController);\n\n  campController.$inject = ['$state', '$sce', 'eventsService'];\n\n  function campController($state, $sce, eventsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      eventsService.getBySlug($state.params.slug).then(function(camp) {\n        camp.description = $sce.trustAsHtml(camp.description);\n        vm.camp = camp;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('campsController', campsController);\n\n  campsController.$inject = ['$state', '$scope', 'eventsService'];\n\n  function campsController($state, $scope, eventsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    vm.title = 'Camps';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      eventsService.getCamps(null, vm.page, vm.pageSize).then(function(result) {\n        vm.camps = result.events;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('collegeController', collegeController);\n\n  collegeController.$inject = ['$state', '$rootScope', 'collegesService', 'rankingsService'];\n\n  function collegeController($state, $rootScope, collegesService, rankingsService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n\n    if ($state.params.slug) {\n      collegesService.getBySlug($state.params.slug).then(function(college) {\n        $rootScope.title = college.name;\n\n        vm.college = college;\n      });\n      rankingsService.getAll('national', $rootScope.site).then(function(result) {\n        vm.rankings = result.rankings;\n      });\n    }\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('collegesController', collegesController);\n\n  collegesController.$inject = ['$rootScope', '$scope', 'collegesService'];\n\n  function collegesController($rootScope, $scope, collegesService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Colleges';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      collegesService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.colleges = result.colleges;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('collegesService', collegesService);\n\n  collegesService.$inject = ['$http', 'config'];\n\n  function collegesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/colleges', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/colleges/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .directive('errSrc', function() {\n      return {\n        link: function(scope, element, attrs) {\n          element.bind('error', function() {\n            if (attrs.src != attrs.errSrc) {\n              attrs.$set('src', attrs.errSrc);\n            }\n          });\n        }\n      };\n    });\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('contactUsController', contactUsController);\n\n  contactUsController.$inject = ['$rootScope', 'contactsService'];\n\n  function contactUsController($rootScope, contactsService) {\n    var vm = this;\n\n    $rootScope.title = 'Contact Us';\n    $rootScope.description = 'Contact Future150 to send feedback, submit information or request information. Media contact information is provided.';\n\n    contactsService.getAll().then(function(result) {\n      vm.contacts = result.contacts;\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('contactsService', contactsService);\n\n  contactsService.$inject = ['$http', 'config'];\n\n  function contactsService($http, config) {\n    var service = {\n      getAll: getAll\n    };\n    return service;\n\n    function getAll() {\n      return $http.get(config.baseApiUrl + '/contacts').then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('eventRegisterController', eventRegisterController);\n\n  eventRegisterController.$inject = ['$state', 'eventsService'];\n\n  function eventRegisterController($state, eventsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      eventsService.getBySlug($state.params.slug).then(function(event) {\n        vm.event = event;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('eventsService', eventsService);\n\n  eventsService.$inject = ['$http', 'config'];\n\n  function eventsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getUpcomingEvents: getUpcomingEvents,\n      getBySlug: getBySlug,\n      getCamps: getCamps,\n      getTournaments: getTournaments\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/events', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getCamps(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize,\n        eventType: 'camp'\n      };\n      return $http.get(config.baseApiUrl + '/events', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getTournaments(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize,\n        eventType: 'tournament'\n      };\n      return $http.get(config.baseApiUrl + '/events', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getUpcomingEvents() {\n      return getAll(null, 1, 4).then(function(result) {\n        return {\n          upcomingEvents: result.events\n        };\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/events/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('footerController', footerController);\n\n  footerController.$inject = ['articlesService'];\n\n  function footerController(articlesService) {\n    var vm = this;\n    activate();\n\n    function activate() {\n      articlesService.getAll().then(function(result) {\n        vm.latestArticles = result.articles;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('homeController', homeController);\n\n  homeController.$inject = ['$rootScope', 'config', 'articlesService', 'rankingsService', 'eventsService', 'videosService', 'playersService'];\n\n  function homeController($rootScope, config, articlesService, rankingsService, eventsService, videosService, playersService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n    vm.selectEvents = selectEvents;\n    vm.selectVideos = selectVideos;\n    vm.selectTrending = selectTrending;\n\n    activate();\n\n    function activate() {\n      articlesService.getFeaturedArticle($rootScope.site).then(function(result) {\n        vm.featuredArticle = result.featuredArticle;\n        $rootScope.featuredImageUrl = result.featuredArticle.imageUrl;\n      });\n\n      articlesService.getHighlighedArticles($rootScope.site).then(function(result) {\n        vm.highlighedArticles = result.highlighedArticles;\n      });\n\n      rankingsService.getAll('national', $rootScope.site).then(function(result) {\n        vm.rankings = result.rankings;\n      });\n\n      eventsService.getUpcomingEvents().then(function(result) {\n        vm.upcomingEvents = result.upcomingEvents;\n      });\n\n      videosService.getTopVideos($rootScope.site).then(function(result) {\n        vm.topVideos = result.topVideos;\n      });\n\n      playersService.getTrendingPlayers($rootScope.site, null, null, 6).then(function(trendingPlayers) {\n        if (angular.isArray(trendingPlayers)) {\n          trendingPlayers.forEach(function(player) {\n            if (!player.imageUrl) {\n              player.imageUrl = config.defaultProfileImageUrl;\n            }\n          });\n        }\n        vm.trendingPlayers = trendingPlayers;\n      });\n    }\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n\n    function selectEvents(type) {\n\n    }\n\n    function selectVideos(sort) {\n\n    }\n\n    function selectTrending(sort) {\n\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('loginController', loginController);\n\n  loginController.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function loginController($rootScope, $state, authenticationService) {\n    var vm = this;\n    vm.login = login;\n\n    $rootScope.title = 'Login';\n    $rootScope.description = '';\n\n    function login(user) {\n      authenticationService.login(user).then(function() {\n        $state.go('site.home');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('messageBoardsController', messageBoardsController);\n\n  messageBoardsController.$inject = ['$rootScope', '$scope', 'messageBoardsService'];\n\n  function messageBoardsController($rootScope, $scope, messageBoardsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Message Boards';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      messageBoardsService.getAllThreads(null, vm.page, vm.pageSize).then(function(result) {\n        vm.threads = result.messageBoardThreads;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('messageBoardsService', messageBoardsService);\n\n  messageBoardsService.$inject = ['$http', 'config'];\n\n  function messageBoardsService($http, config) {\n    var service = {\n      getAllThreads: getAllThreads,\n      getThreadBySlug: getThreadBySlug\n    };\n    return service;\n\n    function getAllThreads(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/messageBoardThreads', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getThreadBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/messageBoardThreads/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('threadController', threadController);\n\n  threadController.$inject = ['$state', '$rootScope', 'messageBoardsService'];\n\n  function threadController($state, $rootScope, messageBoardsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      messageBoardsService.getThreadBySlug($state.params.slug).then(function(thread) {\n        $rootScope.title = thread.title;\n\n        vm.thread = thread;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('navigationController', navigationController);\n\n  navigationController.$inject = ['$state', 'eventsService', 'sites'];\n\n  function navigationController($state, eventsService, sites) {\n    var vm = this;\n    vm.sites = sites;\n    vm.search = search;\n    activate();\n\n    function activate() {\n      eventsService.getCamps().then(function(result) {\n        vm.campsCount = result.count;\n      });\n      eventsService.getTournaments().then(function(result) {\n        vm.tournamentsCount = result.count;\n      });\n    }\n\n    function search(q) {\n      $state.go('search', { q: q });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('topNavigationController', topNavigationController);\n\n  topNavigationController.$inject = ['$scope', '$state', 'authenticationService', 'sites'];\n\n  function topNavigationController($scope, $state, authenticationService, sites) {\n    var vm = this;\n    vm.sites = sites;\n    vm.logout = logout;\n\n    $scope.$watch(authenticationService.isAuthenticated, function(newValue, oldValue) {\n      vm.user = authenticationService.getCurrentUser();\n    });\n\n    function logout() {\n      authenticationService.logout();\n      $state.go('site.home');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('articlesService', articlesService);\n\n  articlesService.$inject = ['$http', 'config'];\n\n  function articlesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getFeaturedArticle: getFeaturedArticle,\n      getHighlighedArticles: getHighlighedArticles,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/articles', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getFeaturedArticle(site) {\n      return getAll(site, null, 1, 1).then(function(result) {\n        return {\n          featuredArticle: result.articles[0]\n        };\n      });\n    }\n\n    function getHighlighedArticles(site) {\n      return getAll(site, null, 1, 4).then(function(result) {\n        return {\n          highlighedArticles: result.articles\n        };\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/articles/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('newsController', newsController);\n\n  newsController.$inject = ['$rootScope', '$scope', 'articlesService'];\n\n  function newsController($rootScope, $scope, articlesService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Latest College Basketball Recruiting News from Future150';\n    $rootScope.description = 'The latest basketball recruiting news from Future150. Covering the best high school basketball players across the nation as they become top college recruits.';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      vm.isLoading = true;\n      articlesService.getAll($rootScope.site, null, vm.page, vm.pageSize).then(function(result) {\n        vm.articles = result.articles;\n        vm.count = result.count;\n        vm.isLoading = false;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('playersService', playersService);\n\n  playersService.$inject = ['$http', 'config'];\n\n  function playersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug,\n      getTrendingPlayers: getTrendingPlayers\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/players/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getTrendingPlayers(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players/trending', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('profileController', profileController);\n\n  profileController.$inject = ['$state', '$sce', 'playersService'];\n\n  function profileController($state, $sce, playersService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      playersService.getBySlug($state.params.slug).then(function(player) {\n        player.views = 180;\n        player.likes = 20;\n        player.followers = 10;\n        player.shares = 60;\n        player.notes = $sce.trustAsHtml(player.notes);\n        vm.player = player;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('rankingsController', rankingsController);\n\n  rankingsController.$inject = ['$rootScope', 'rankingsService'];\n\n  function rankingsController($rootScope, rankingsService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n\n    $rootScope.title = 'National Rankings';\n    $rootScope.description = '';\n\n    rankingsService.getAll('national', $rootScope.site).then(function(result) {\n      vm.rankings = result.rankings;\n    });\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('rankingsService', rankingsService);\n\n  rankingsService.$inject = ['$http', 'config'];\n\n  function rankingsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById\n    };\n    return service;\n\n    function getAll(type, site) {\n      var params = {\n        site: site\n      };\n      return $http.get(config.baseApiUrl + '/rankings/' + type, { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/rankings/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('registerController', registerController);\n\n  registerController.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function registerController($rootScope, $state, authenticationService) {\n    var vm = this;\n    vm.register = register;\n\n    $rootScope.title = 'Register';\n    $rootScope.description = '';\n\n    function register(user) {\n      authenticationService.register(user).then(function() {\n        $state.go('home');\n      });\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('searchController', searchController);\n\n  searchController.$inject = ['$rootScope', '$scope', '$stateParams', 'config', 'playersService'];\n\n  function searchController($rootScope, $scope, $stateParams, config, playersService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n    vm.q = $stateParams.q;\n\n    $rootScope.title = 'Search';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      vm.isLoading = true;\n      playersService.getAll($stateParams.q, vm.page, vm.pageSize).then(function(result) {\n        if (result.players) {\n          result.players.forEach(function(player) {\n            player.imageUrl = player.imageUrl || config.defaultProfileImageUrl;\n          });\n        }\n        vm.players = result.players;\n        vm.count = result.count;\n        vm.isLoading = false;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('buyProductController', buyProductController);\n\n  buyProductController.$inject = ['$state', 'productsService'];\n\n  function buyProductController($state, productsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      productsService.getBySlug($state.params.slug).then(function(product) {\n        vm.product = product;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('productController', productController);\n\n  productController.$inject = ['$state', 'productsService'];\n\n  function productController($state, productsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      productsService.getBySlug($state.params.slug).then(function(product) {\n        vm.product = product;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('productsService', productsService);\n\n  productsService.$inject = ['$http', 'config'];\n\n  function productsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/products', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/products/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('shopController', shopController);\n\n  shopController.$inject = ['$rootScope', '$scope', 'productsService'];\n\n  function shopController($rootScope, $scope, productsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Shop';\n    $rootScope.description = 'Shop';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      productsService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.products = result.products;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('tournamentController', tournamentController);\n\n  tournamentController.$inject = ['$state', '$sce', 'eventsService'];\n\n  function tournamentController($state, $sce, eventsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      eventsService.getBySlug($state.params.slug).then(function(tournament) {\n        tournament.description = $sce.trustAsHtml(tournament.description);\n        vm.tournament = tournament;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('tournamentsController', tournamentsController);\n\n  tournamentsController.$inject = ['$state', '$scope', 'eventsService'];\n\n  function tournamentsController($state, $scope, eventsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    vm.title = 'Tournaments';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      eventsService.getTournaments(null, vm.page, vm.pageSize).then(function(result) {\n        vm.tournaments = result.events;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('videosController', videosController);\n\n  videosController.$inject = ['$rootScope', '$scope', 'videosService'];\n\n  function videosController($rootScope, $scope, videosService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Videos';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      videosService.getAll(null, null, vm.page, vm.pageSize).then(function(result) {\n        vm.videos = result.videos;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('videosService', videosService);\n\n  videosService.$inject = ['$http', 'config'];\n\n  function videosService($http, config) {\n    var service = {\n      getAll: getAll,\n      getTopVideos: getTopVideos\n    };\n    return service;\n\n    function getAll(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/videos', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getTopVideos(site) {\n      return getAll(site, null, 1, 4).then(function(result) {\n        return {\n          topVideos: result.videos\n        };\n      });\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}