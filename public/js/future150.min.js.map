{"version":3,"sources":["../public/app/app.module.js","../public/app/app.config.js","../public/app/app.routes.js","../public/app/app.run.js","../public/app/article/article.controller.js","../public/app/authentication/authentication.service.js","../public/app/authentication/authenticationInterceptor.factory.js","../public/app/camps/camp.controller.js","../public/app/camps/campRegister.controller.js","../public/app/camps/camps.controller.js","../public/app/camps/camps.service.js","../public/app/colleges/college.controller.js","../public/app/colleges/colleges.controller.js","../public/app/colleges/colleges.service.js","../public/app/common/errSrc.directive.js","../public/app/contactUs/contactUs.controller.js","../public/app/contactUs/contacts.service.js","../public/app/footer/footer.controller.js","../public/app/home/home.controller.js","../public/app/login/login.controller.js","../public/app/messageBoards/messageBoards.controller.js","../public/app/messageBoards/messageBoards.service.js","../public/app/messageBoards/thread.controller.js","../public/app/navigation/navigation.controller.js","../public/app/navigation/topNavigation.controller.js","../public/app/news/articles.service.js","../public/app/news/news.controller.js","../public/app/profile/players.service.js","../public/app/profile/profile.controller.js","../public/app/rankings/rankings.controller.js","../public/app/rankings/rankings.service.js","../public/app/register/register.controller.js","../public/app/search/search.controller.js","../public/app/shop/buyProduct.controller.js","../public/app/shop/product.controller.js","../public/app/shop/products.service.js","../public/app/shop/shop.controller.js","../public/app/tournaments/tournament.controller.js","../public/app/tournaments/tournamentRegister.controller.js","../public/app/tournaments/tournaments.controller.js","../public/app/tournaments/tournaments.service.js","../public/app/videos/videos.controller.js","../public/app/videos/videos.service.js"],"names":["angular","module","config","$httpProvider","interceptors","push","constant","baseApiUrl","siteTwitterHandle","siteTitle","siteDescription","defaultProfileImageUrl","defaultArticleImageUrl","defaultProductImageUrl","defaultCollegeImageUrl","path","name","$inject","$stateProvider","$urlRouterProvider","$locationProvider","otherwise","state","url","abstract","template","templateUrl","controller","controllerAs","html5Mode","hashPrefix","run","$rootScope","$location","$filter","sites","twitterHandle","title","description","absUrl","$on","event","toState","toParams","site","selectedSite","articleController","$state","$sce","articlesService","vm","this","params","slug","getBySlug","then","article","featuredImageUrl","imageUrl","body","trustAsHtml","authenticationService","$http","localStorageService","login","user","post","result","set","data","token","updateCurrentUser","logout","remove","getCurrentUser","get","profileImageUrl","isAuthenticated","getAuthToken","service","factory","authenticationInterceptor","$injector","request","headers","Authorization","campController","campsService","camp","campRegisterController","campsController","$scope","activate","getAll","page","pageSize","camps","count","$watchGroup","q","collegeController","collegesService","rankingsService","selectRankings","id","getById","ranking","selectedRanking","college","rankings","collegesController","colleges","directive","link","scope","element","attrs","bind","src","errSrc","$set","contactUsController","contactsService","contacts","footerController","latestArticles","articles","homeController","videosService","playersService","visibleArticleCount","visibleRankingPlayerCount","visibleEventCount","visibleVideoCount","visibleTrendingPlayerCount","videos","getTrendingPlayers","trendingPlayers","selectEvents","type","selectVideos","sort","selectTrending","showMoreNews","showMoreRankingPlayers","showMoreEvents","showMoreVideos","showMoreTrendingPlayers","loginController","go","messageBoardsController","messageBoardsService","getAllThreads","threads","messageBoardThreads","getThreadBySlug","threadController","thread","navigationController","tournamentsService","campsCount","tournamentsCount","search","topNavigationController","$watch","newValue","oldValue","newsController","isLoading","players","isArray","forEach","player","profileController","collegeInterest","isHot","levelOfInterest","isWarm","isCold","notes","note","noteHtml","video","videoUrl","trustAsResourceUrl","rankingsController","playerRanking","registerController","register","searchController","$stateParams","buyProductController","productsService","product","productController","shopController","products","tournamentController","tournament","tournamentRegisterController","tournamentsController","tournaments","videosController"],"mappings":"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","file":"future150.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('future150', ['ui.router', 'ui.bootstrap', 'youtube-embed',\n      'angulartics', 'angulartics.google.analytics', 'LocalStorageModule']);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .constant('config', {\n      baseApiUrl: '',\n      siteTwitterHandle: '@future150',\n      siteTitle: 'Basketball Recruiting News with Player Rankings & Profiles',\n      siteDescription: 'The best source for college basketball recruiting, class rankings and elite player profiles. Discover which high school players are the hottest recruits.',\n      defaultProfileImageUrl: '//www.clker.com/cliparts/C/N/O/F/T/X/blank-profile-hi.png',\n      defaultArticleImageUrl: '//placehold.it/643x341?text=No Image',\n      defaultProductImageUrl: '//placehold.it/60x60?text=No Image',\n      defaultCollegeImageUrl: '//placehold.it/60x60?text=No Image'\n    })\n    .constant('sites', [\n      {\n        path: 'hs',\n        name: 'Mens'\n      },\n      {\n        path: 'girls',\n        name: 'Womens'\n      },\n      {\n        path: 'jr',\n        name: 'Junior'\n      }\n    ]);\n\n  angular\n    .module('future150')\n    .config(config);\n\n  config.$inject = ['$httpProvider'];\n\n  function config($httpProvider) {\n    $httpProvider.interceptors.push('authenticationInterceptor');\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function($stateProvider, $urlRouterProvider, $locationProvider) {\n      $urlRouterProvider.otherwise('/hs/');\n\n      $stateProvider\n        .state('site', {\n          url: '/:site',\n          abstract: true,\n          template: '<ui-view></ui-view>'\n        });\n\n      $stateProvider\n        .state('site.home', {\n          url: '/',\n          templateUrl: '/app/home/homeView.html',\n          controller: 'homeController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('login', {\n          url: '/login',\n          templateUrl: '/app/login/loginView.html',\n          controller: 'loginController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('register', {\n          url: '/register',\n          templateUrl: '/app/register/registerView.html',\n          controller: 'registerController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('account', {\n          url: '/account',\n          abstract: true,\n          templateUrl: '/app/account/accountView.html'\n        });\n\n      $stateProvider\n        .state('account.personal', {\n          url: '/personal',\n          templateUrl: '/app/account/personalView.html'\n        });\n\n      $stateProvider\n        .state('account.settings', {\n          url: '/settings',\n          templateUrl: '/app/account/settingsView.html'\n        });\n\n      $stateProvider\n        .state('account.billing', {\n          url: '/billing',\n          templateUrl: '/app/account/billingView.html'\n        });\n\n      $stateProvider\n        .state('pricing', {\n          url: '/pricing',\n          templateUrl: '/app/pricing/pricing.html'\n        });\n\n      $stateProvider\n        .state('camps', {\n          url: '/camps',\n          templateUrl: '/app/camps/campsView.html',\n          controller: 'campsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('camp', {\n          url: '/camp/:slug',\n          templateUrl: '/app/camps/campView.html',\n          controller: 'campController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('registerCamp', {\n          url: '/camp/:slug/register',\n          templateUrl: '/app/camps/campRegisterView.html',\n          controller: 'campRegisterController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('tournaments', {\n          url: '/tournaments',\n          templateUrl: '/app/tournaments/tournamentsView.html',\n          controller: 'tournamentsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('tournament', {\n          url: '/tournament/:slug',\n          templateUrl: '/app/tournaments/tournamentView.html',\n          controller: 'tournamentController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('registerTournament', {\n          url: '/tournament/:slug/register',\n          templateUrl: '/app/tournaments/registerTournamentView.html',\n          controller: 'tournamentRegisterController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('submitTournamentRoster', {\n          url: '/tournament/:slug/submitRoster',\n          templateUrl: '/app/tournaments/submitTournamentRoster.html'\n        });\n\n      $stateProvider\n        .state('contactUs', {\n          url: '/contact-us',\n          templateUrl: '/app/contactUs/contactUsView.html',\n          controller: 'contactUsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('shop', {\n          url: '/shop',\n          templateUrl: '/app/shop/shopView.html',\n          controller: 'shopController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('product', {\n          url: '/product/:slug',\n          templateUrl: '/app/shop/productView.html',\n          controller: 'productController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('buyProduct', {\n          url: '/product/:slug/buy',\n          templateUrl: '/app/shop/buyProductView.html',\n          controller: 'buyProductController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('site.news', {\n          url: '/news',\n          templateUrl: '/app/news/newsView.html',\n          controller: 'newsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('article', {\n          url: '/article/:slug',\n          templateUrl: '/app/article/articleView.html',\n          controller: 'articleController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('messageBoards', {\n          url: '/message-boards',\n          templateUrl: '/app/messageBoards/messageBoardsView.html',\n          controller: 'messageBoardsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('messageBoardThread', {\n          url: '/message-boards/:slug',\n          templateUrl: '/app/messageBoards/threadView.html',\n          controller: 'threadController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('videos', {\n          url: '/videos',\n          templateUrl: '/app/videos/videosView.html',\n          controller: 'videosController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('profile', {\n          url: '/profile/:slug',\n          templateUrl: '/app/profile/profileView.html',\n          controller: 'profileController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('rankings', {\n          url: '/rankings/:type',\n          templateUrl: '/app/rankings/rankingsView.html',\n          controller: 'rankingsController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('trendingPlayers', {\n          url: '/trendingPlayers',\n          templateUrl: '/app/trendingPlayers/trendingPlayersView.html'\n        });\n\n      $stateProvider\n        .state('colleges', {\n          url: '/colleges',\n          templateUrl: '/app/colleges/collegesView.html',\n          controller: 'collegesController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('college', {\n          url: '/college/:slug',\n          templateUrl: '/app/colleges/collegeView.html',\n          controller: 'collegeController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('search', {\n          url: '/search?q',\n          templateUrl: '/app/search/searchView.html',\n          controller: 'searchController',\n          controllerAs: 'vm'\n        });\n\n      $stateProvider\n        .state('aauTeams', {\n          url: '/aauTeams',\n          templateUrl: '/app/aauTeams/aauTeamsView.html'\n        });\n\n      $stateProvider\n        .state('alumni', {\n          url: '/alumni',\n          templateUrl: '/app/alumni/alumniView.html'\n        });\n\n      $stateProvider\n        .state('collegeExposurePack', {\n          url: '/collegeExposurePack',\n          templateUrl: '/app/collegeExposurePack/collegeExposurePackView.html'\n        });\n\n      $stateProvider\n        .state('submitPlayerInfo', {\n          url: '/submitPlayerInfo',\n          templateUrl: '/app/submitPlayerInfo/submitPlayerInfo.html'\n        });\n\n      $stateProvider\n        .state('submitPlayerVideo', {\n          url: '/submitPlayerVideo',\n          templateUrl: '/app/submitPlayerVideo/submitPlayerVideo.html'\n        });\n\n      $locationProvider.html5Mode(true);\n      $locationProvider.hashPrefix('!');\n    }]);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .run(run);\n\n  run.$inject = ['$rootScope', '$location', '$filter', 'config', 'sites'];\n\n  function run($rootScope, $location, $filter, config, sites) {\n    $rootScope.twitterHandle = config.siteTwitterHandle;\n    $rootScope.title = config.siteTitle;\n    $rootScope.description = config.siteDescription;\n    $rootScope.url = $location.absUrl();\n    $rootScope.defaultProfileImageUrl = config.defaultProfileImageUrl;\n    $rootScope.defaultArticleImageUrl = config.defaultArticleImageUrl;\n    $rootScope.defaultProductImageUrl = config.defaultProductImageUrl;\n    $rootScope.defaultCollegeImageUrl = config.defaultCollegeImageUrl;\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n      $rootScope.site = toParams.site;\n      $rootScope.selectedSite = $filter('filter')(sites, { path: toParams.site })[0];\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('articleController', articleController);\n\n  articleController.$inject = ['$state', '$rootScope', '$sce', 'articlesService'];\n\n  function articleController($state, $rootScope, $sce, articlesService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      articlesService.getBySlug($state.params.slug).then(function(article) {\n        $rootScope.title = article.title;\n        $rootScope.description = article.description;\n        $rootScope.featuredImageUrl = article.imageUrl;\n\n        article.body = $sce.trustAsHtml(article.body);\n        vm.article = article;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('authenticationService', authenticationService);\n\n  authenticationService.$inject = ['$http', 'config', 'localStorageService'];\n\n  function authenticationService($http, config, localStorageService) {\n    var user;\n\n    var service = {\n      login: login,\n      logout: logout,\n      getCurrentUser: getCurrentUser,\n      isAuthenticated: isAuthenticated,\n      getAuthToken: getAuthToken\n    };\n    return service;\n\n    function login(user) {\n      return $http.post(config.baseApiUrl + '/token', user).then(function(result) {\n        localStorageService.set('token', result.data.token);\n        return updateCurrentUser();\n      });\n    }\n\n    function logout() {\n      localStorageService.remove('token');\n      localStorageService.remove('user');\n    }\n\n    function getCurrentUser() {\n      return localStorageService.get('user');\n    }\n\n    function updateCurrentUser() {\n      return $http.get(config.baseApiUrl + '/profile').then(function(result) {\n        result.data.user.profileImageUrl = result.data.user.profileImageUrl || config.defaultProfileImageUrl;\n        localStorageService.set('user', result.data.user);\n      });\n    }\n\n    function isAuthenticated() {\n      return !!getCurrentUser();\n    }\n\n    function getAuthToken() {\n      return localStorageService.get('token');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('authenticationInterceptor', authenticationInterceptor);\n\n  authenticationInterceptor.$inject = ['$injector'];\n\n  function authenticationInterceptor($injector) {\n    return {\n      request: function(config) {\n        var authenticationService = $injector.get('authenticationService'),\n          token = authenticationService.getAuthToken();\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n        return config;\n      }\n    };\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('campController', campController);\n\n  campController.$inject = ['$state', '$sce', 'campsService'];\n\n  function campController($state, $sce, campsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      campsService.getBySlug($state.params.slug).then(function(camp) {\n        camp.description = $sce.trustAsHtml(camp.description);\n        vm.camp = camp;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('campRegisterController', campRegisterController);\n\n  campRegisterController.$inject = ['$state', 'campsService'];\n\n  function campRegisterController($state, campsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      campsService.getBySlug($state.params.slug).then(function(event) {\n        vm.camp = camp;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('campsController', campsController);\n\n  campsController.$inject = ['$state', '$scope', 'campsService'];\n\n  function campsController($state, $scope, campsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    vm.title = 'Camps';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      campsService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.camps = result.camps;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('campsService', campsService);\n\n  campsService.$inject = ['$http', 'config'];\n\n  function campsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/camps', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/camps/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('collegeController', collegeController);\n\n  collegeController.$inject = ['$state', '$rootScope', 'collegesService', 'rankingsService'];\n\n  function collegeController($state, $rootScope, collegesService, rankingsService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n\n    if ($state.params.slug) {\n      collegesService.getBySlug($state.params.slug).then(function(college) {\n        $rootScope.title = college.name;\n\n        vm.college = college;\n      });\n      rankingsService.getAll('national', $rootScope.site).then(function(result) {\n        vm.rankings = result.rankings;\n      });\n    }\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('collegesController', collegesController);\n\n  collegesController.$inject = ['$rootScope', '$scope', 'collegesService'];\n\n  function collegesController($rootScope, $scope, collegesService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Colleges';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      collegesService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.colleges = result.colleges;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('collegesService', collegesService);\n\n  collegesService.$inject = ['$http', 'config'];\n\n  function collegesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/colleges', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/colleges/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .directive('errSrc', function() {\n      return {\n        link: function(scope, element, attrs) {\n          element.bind('error', function() {\n            if (attrs.src != attrs.errSrc) {\n              attrs.$set('src', attrs.errSrc);\n            }\n          });\n        }\n      };\n    });\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('contactUsController', contactUsController);\n\n  contactUsController.$inject = ['$rootScope', 'contactsService'];\n\n  function contactUsController($rootScope, contactsService) {\n    var vm = this;\n\n    $rootScope.title = 'Contact Us';\n    $rootScope.description = 'Contact Future150 to send feedback, submit information or request information. Media contact information is provided.';\n\n    contactsService.getAll().then(function(result) {\n      vm.contacts = result.contacts;\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('contactsService', contactsService);\n\n  contactsService.$inject = ['$http', 'config'];\n\n  function contactsService($http, config) {\n    var service = {\n      getAll: getAll\n    };\n    return service;\n\n    function getAll() {\n      return $http.get(config.baseApiUrl + '/contacts').then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('footerController', footerController);\n\n  footerController.$inject = ['articlesService'];\n\n  function footerController(articlesService) {\n    var vm = this;\n    activate();\n\n    function activate() {\n      articlesService.getAll().then(function(result) {\n        vm.latestArticles = result.articles;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('homeController', homeController);\n\n  homeController.$inject = ['$rootScope', 'config', 'articlesService', 'rankingsService', 'campsService', 'videosService', 'playersService'];\n\n  function homeController($rootScope, config, articlesService, rankingsService, campsService, videosService, playersService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n    vm.selectEvents = selectEvents;\n    vm.selectVideos = selectVideos;\n    vm.selectTrending = selectTrending;\n    vm.showMoreNews = showMoreNews;\n    vm.showMoreRankingPlayers = showMoreRankingPlayers;\n    vm.showMoreEvents = showMoreEvents;\n    vm.showMoreVideos = showMoreVideos;\n    vm.showMoreTrendingPlayers = showMoreTrendingPlayers;\n\n    activate();\n\n    function activate() {\n      vm.visibleArticleCount = 4;\n      vm.visibleRankingPlayerCount = 6;\n      vm.visibleEventCount = 4;\n      vm.visibleVideoCount = 4;\n      vm.visibleTrendingPlayerCount = 6;\n\n      articlesService.getAll($rootScope.site).then(function(result) {\n        vm.articles = result.articles;\n      });\n\n      rankingsService.getAll('national', $rootScope.site).then(function(result) {\n        vm.rankings = result.rankings;\n      });\n\n      campsService.getAll().then(function(result) {\n        vm.camps = result.camps;\n      });\n\n      videosService.getAll($rootScope.site).then(function(result) {\n        vm.videos = result.videos;\n      });\n\n      playersService.getTrendingPlayers($rootScope.site).then(function(trendingPlayers) {\n        vm.trendingPlayers = trendingPlayers;\n      });\n    }\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n\n    function selectEvents(type) {\n\n    }\n\n    function selectVideos(sort) {\n\n    }\n\n    function selectTrending(sort) {\n\n    }\n\n    function showMoreNews() {\n      vm.visibleArticleCount += 4;\n    }\n\n    function showMoreRankingPlayers() {\n      vm.visibleRankingPlayerCount += 6;\n    }\n\n    function showMoreEvents() {\n      vm.visibleEventCount += 4;\n    }\n\n    function showMoreVideos() {\n      vm.visibleVideoCount += 4;\n    }\n\n    function showMoreTrendingPlayers() {\n      vm.visibleTrendingPlayerCount += 6;\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('loginController', loginController);\n\n  loginController.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function loginController($rootScope, $state, authenticationService) {\n    var vm = this;\n    vm.login = login;\n\n    $rootScope.title = 'Login';\n    $rootScope.description = '';\n\n    function login(user) {\n      authenticationService.login(user).then(function() {\n        $state.go('site.home');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('messageBoardsController', messageBoardsController);\n\n  messageBoardsController.$inject = ['$rootScope', '$scope', 'messageBoardsService'];\n\n  function messageBoardsController($rootScope, $scope, messageBoardsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Message Boards';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      messageBoardsService.getAllThreads(null, vm.page, vm.pageSize).then(function(result) {\n        vm.threads = result.messageBoardThreads;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('messageBoardsService', messageBoardsService);\n\n  messageBoardsService.$inject = ['$http', 'config'];\n\n  function messageBoardsService($http, config) {\n    var service = {\n      getAllThreads: getAllThreads,\n      getThreadBySlug: getThreadBySlug\n    };\n    return service;\n\n    function getAllThreads(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/messageBoardThreads', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getThreadBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/messageBoardThreads/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('threadController', threadController);\n\n  threadController.$inject = ['$state', '$rootScope', 'messageBoardsService'];\n\n  function threadController($state, $rootScope, messageBoardsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      messageBoardsService.getThreadBySlug($state.params.slug).then(function(thread) {\n        $rootScope.title = thread.title;\n\n        vm.thread = thread;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('navigationController', navigationController);\n\n  navigationController.$inject = ['$state', 'campsService', 'tournamentsService', 'sites'];\n\n  function navigationController($state, campsService, tournamentsService, sites) {\n    var vm = this;\n    vm.sites = sites;\n    vm.search = search;\n    activate();\n\n    function activate() {\n      campsService.getAll().then(function(result) {\n        vm.campsCount = result.count;\n      });\n      tournamentsService.getAll().then(function(result) {\n        vm.tournamentsCount = result.count;\n      });\n    }\n\n    function search(q) {\n      $state.go('search', { q: q });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('topNavigationController', topNavigationController);\n\n  topNavigationController.$inject = ['$scope', '$state', 'authenticationService', 'sites'];\n\n  function topNavigationController($scope, $state, authenticationService, sites) {\n    var vm = this;\n    vm.sites = sites;\n    vm.logout = logout;\n\n    $scope.$watch(authenticationService.isAuthenticated, function(newValue, oldValue) {\n      vm.user = authenticationService.getCurrentUser();\n    });\n\n    function logout() {\n      authenticationService.logout();\n      $state.go('site.home');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('articlesService', articlesService);\n\n  articlesService.$inject = ['$http', 'config'];\n\n  function articlesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/articles', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/articles/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('newsController', newsController);\n\n  newsController.$inject = ['$rootScope', '$scope', 'articlesService'];\n\n  function newsController($rootScope, $scope, articlesService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Latest College Basketball Recruiting News from Future150';\n    $rootScope.description = 'The latest basketball recruiting news from Future150. Covering the best high school basketball players across the nation as they become top college recruits.';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      vm.isLoading = true;\n      articlesService.getAll($rootScope.site, null, vm.page, vm.pageSize).then(function(result) {\n        vm.articles = result.articles;\n        vm.count = result.count;\n        vm.isLoading = false;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('playersService', playersService);\n\n  playersService.$inject = ['$http', 'config'];\n\n  function playersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug,\n      getTrendingPlayers: getTrendingPlayers\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players', { params: params }).then(function(result) {\n        if (result.data && result.data.players && angular.isArray(result.data.players)) {\n          result.data.players.forEach(function(player) {\n            player.imageUrl = player.imageUrl || config.defaultProfileImageUrl;\n          });\n        }\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/players/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getTrendingPlayers(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players/trending', { params: params }).then(function(result) {\n        if (result.data && angular.isArray(result.data)) {\n          result.data.forEach(function(player) {\n            player.imageUrl = player.imageUrl || config.defaultProfileImageUrl;\n          });\n        }\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('profileController', profileController);\n\n  profileController.$inject = ['$state', '$sce', 'playersService'];\n\n  function profileController($state, $sce, playersService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      playersService.getBySlug($state.params.slug).then(function(player) {\n        player.colleges.forEach(function(collegeInterest) {\n          collegeInterest.isHot = (collegeInterest.levelOfInterest == 'Favorite' ||\n            collegeInterest.levelOfInterest == 'Hot');\n          collegeInterest.isWarm = (collegeInterest.levelOfInterest == 'Warmer' ||\n            collegeInterest.levelOfInterest == 'Warm');\n          collegeInterest.isCold = (collegeInterest.levelOfInterest == 'Cold');\n        });\n        player.notes.forEach(function(note) {\n          note.noteHtml = $sce.trustAsHtml(note.note);\n        });\n        player.videos.forEach(function(video) {\n          video.videoUrl = $sce.trustAsResourceUrl(video.videoUrl);\n        });\n        vm.player = player;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('rankingsController', rankingsController);\n\n  rankingsController.$inject = ['$rootScope', 'rankingsService'];\n\n  function rankingsController($rootScope, rankingsService) {\n    var vm = this;\n    vm.selectRankings = selectRankings;\n\n    $rootScope.title = 'National Rankings';\n    $rootScope.description = '';\n\n    rankingsService.getAll('national', $rootScope.site).then(function(result) {\n      vm.rankings = result.rankings;\n    });\n\n    function selectRankings(id) {\n      rankingsService.getById(id).then(function(ranking) {\n        vm.selectedRanking = ranking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('rankingsService', rankingsService);\n\n  rankingsService.$inject = ['$http', 'config'];\n\n  function rankingsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById\n    };\n    return service;\n\n    function getAll(type, site) {\n      var params = {\n        site: site\n      };\n      return $http.get(config.baseApiUrl + '/rankings/' + type, { params: params }).then(function(result) {\n        if (result.data && result.data.rankings && angular.isArray(result.data.rankings)) {\n          result.data.rankings.forEach(function(ranking) {\n            if (angular.isArray(ranking.players)) {\n              ranking.players.forEach(function(player) {\n                player.imageUrl = player.imageUrl || config.defaultProfileImageUrl;\n              });\n            }\n          });\n        }\n        return result.data;\n      });\n    }\n\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/rankings/' + id).then(function(result) {\n        if (result.data && result.data.players && angular.isArray(result.data.players)) {\n          result.data.players.forEach(function(playerRanking) {\n            playerRanking.player.imageUrl = playerRanking.player.imageUrl || config.defaultProfileImageUrl;\n          });\n        }\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('registerController', registerController);\n\n  registerController.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function registerController($rootScope, $state, authenticationService) {\n    var vm = this;\n    vm.register = register;\n\n    $rootScope.title = 'Register';\n    $rootScope.description = '';\n\n    function register(user) {\n      authenticationService.register(user).then(function() {\n        $state.go('home');\n      });\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('searchController', searchController);\n\n  searchController.$inject = ['$rootScope', '$scope', '$stateParams', 'config', 'playersService'];\n\n  function searchController($rootScope, $scope, $stateParams, config, playersService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n    vm.q = $stateParams.q;\n\n    $rootScope.title = 'Search';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      vm.isLoading = true;\n      playersService.getAll($stateParams.q, vm.page, vm.pageSize).then(function(result) {\n        if (result.players) {\n          result.players.forEach(function(player) {\n            player.imageUrl = player.imageUrl || config.defaultProfileImageUrl;\n          });\n        }\n        vm.players = result.players;\n        vm.count = result.count;\n        vm.isLoading = false;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('buyProductController', buyProductController);\n\n  buyProductController.$inject = ['$state', 'productsService'];\n\n  function buyProductController($state, productsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      productsService.getBySlug($state.params.slug).then(function(product) {\n        vm.product = product;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('productController', productController);\n\n  productController.$inject = ['$state', 'productsService'];\n\n  function productController($state, productsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      productsService.getBySlug($state.params.slug).then(function(product) {\n        vm.product = product;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('productsService', productsService);\n\n  productsService.$inject = ['$http', 'config'];\n\n  function productsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/products', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/products/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('shopController', shopController);\n\n  shopController.$inject = ['$rootScope', '$scope', 'productsService'];\n\n  function shopController($rootScope, $scope, productsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Shop';\n    $rootScope.description = 'Shop';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      productsService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.products = result.products;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('tournamentController', tournamentController);\n\n  tournamentController.$inject = ['$state', '$sce', 'tournamentsService'];\n\n  function tournamentController($state, $sce, tournamentsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      tournamentsService.getBySlug($state.params.slug).then(function(tournament) {\n        tournament.description = $sce.trustAsHtml(tournament.description);\n        vm.tournament = tournament;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('tournamentRegisterController', tournamentRegisterController);\n\n  tournamentRegisterController.$inject = ['$state', 'tournamentsService'];\n\n  function tournamentRegisterController($state, tournamentsService) {\n    var vm = this;\n\n    if ($state.params.slug) {\n      tournamentsService.getBySlug($state.params.slug).then(function(tournament) {\n        vm.tournament = tournament;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('tournamentsController', tournamentsController);\n\n  tournamentsController.$inject = ['$state', '$scope', 'tournamentsService'];\n\n  function tournamentsController($state, $scope, tournamentsService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      tournamentsService.getAll(null, vm.page, vm.pageSize).then(function(result) {\n        vm.tournaments = result.tournaments;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('tournamentsService', tournamentsService);\n\n  tournamentsService.$inject = ['$http', 'config'];\n\n  function tournamentsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getBySlug: getBySlug\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/tournaments', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getBySlug(slug) {\n      return $http.get(config.baseApiUrl + '/tournaments/' + slug).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .controller('videosController', videosController);\n\n  videosController.$inject = ['$rootScope', '$scope', 'videosService'];\n\n  function videosController($rootScope, $scope, videosService) {\n    var vm = this;\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    $rootScope.title = 'Videos';\n    $rootScope.description = '';\n\n    activate();\n    $scope.$watchGroup(['vm.page'], activate);\n\n    function activate() {\n      videosService.getAll(null, null, vm.page, vm.pageSize).then(function(result) {\n        vm.videos = result.videos;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150')\n    .factory('videosService', videosService);\n\n  videosService.$inject = ['$http', 'config'];\n\n  function videosService($http, config) {\n    var service = {\n      getAll: getAll\n    };\n    return service;\n\n    function getAll(site, q, page, pageSize) {\n      var params = {\n        site: site,\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/videos', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}