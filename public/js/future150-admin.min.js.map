{"version":3,"sources":["../../public/admin/app/app.module.js","../../public/admin/app/app.config.js","../../public/admin/app/app.routes.js","../../public/admin/app/app.run.js","../../public/admin/app/components/articles/article.controller.js","../../public/admin/app/components/articles/articles.controller.js","../../public/admin/app/components/articles/articles.service.js","../../public/admin/app/components/authentication/authentication.service.js","../../public/admin/app/components/authentication/authenticationInterceptor.factory.js","../../public/admin/app/components/colleges/college.controller.js","../../public/admin/app/components/colleges/colleges.controller.js","../../public/admin/app/components/colleges/colleges.service.js","../../public/admin/app/components/contacts/contact.controller.js","../../public/admin/app/components/contacts/contacts.controller.js","../../public/admin/app/components/contacts/contacts.service.js","../../public/admin/app/components/dashboard/dashboard.controller.js","../../public/admin/app/components/events/event.controller.js","../../public/admin/app/components/events/events.controller.js","../../public/admin/app/components/events/events.service.js","../../public/admin/app/components/login/login.controller.js","../../public/admin/app/components/navigation/navigation.controller.js","../../public/admin/app/components/users/user.controller.js","../../public/admin/app/components/users/users.controller.js","../../public/admin/app/components/users/users.service.js","../../public/admin/app/components/rankings/nationalRanking.controller.js","../../public/admin/app/components/rankings/nationalRankings.controller.js","../../public/admin/app/components/rankings/rankings.service.js","../../public/admin/app/components/profile/profile.controller.js","../../public/admin/app/components/videos/video.controller.js","../../public/admin/app/components/videos/videos.controller.js","../../public/admin/app/components/videos/videos.service.js","../../public/admin/app/components/players/player.controller.js","../../public/admin/app/components/players/players.controller.js","../../public/admin/app/components/players/players.service.js"],"names":["angular","module","config","$httpProvider","interceptors","push","constant","baseApiUrl","currentRankingYear","lastRankingYear","defaultProfileImageUrl","$inject","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","authenticate","$rootScope","$state","authenticationService","$on","event","toState","toParams","fromState","fromParams","isAuthenticated","go","preventDefault","run","articleController","$stateParams","articlesService","save","article","then","vm","this","id","getById","createdDate","Date","articlesController","$scope","activate","getAll","q","page","pageSize","result","articles","count","start","end","$watchGroup","$http","params","get","data","_id","put","post","service","factory","localStorageService","login","user","set","token","updateCurrentUser","logout","remove","getCurrentUser","profileImageUrl","getAuthToken","authenticationInterceptor","globalConfig","$injector","request","indexOf","headers","Authorization","collegeController","collegesService","college","collegesController","colleges","contactController","contactsService","contact","contactsController","contacts","dashboardController","labels","series","labels2","data2","eventController","eventsService","eventsController","events","loginController","navigationController","$watch","newValue","oldValue","userController","usersService","usersController","users","nationalRankingController","rankingsService","playersService","ranking","nextRanking","players","length","refreshPlayers","add","player","playerRanking","rank","indexToRemove","splice","update","forEach","i","sortableOptions","stop","items","cursor","rankYears","nationalRankingsController","rankings","type","profileController","videoController","videosService","video","videosController","videos","playerController","imageUrl","playersController"],"mappings":"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","file":"future150-admin.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin', ['ui.router', 'ui.bootstrap', 'ui.select', 'ui.sortable',\n      'summernote', 'LocalStorageModule', 'chart.js']);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .constant('config', {\n      baseApiUrl: '',\n      currentRankingYear: 2015,\n      lastRankingYear: 2020,\n      defaultProfileImageUrl: '//placehold.it/160x160?text=No Image'\n    });\n\n  angular\n    .module('future150Admin')\n    .config(config);\n\n  config.$inject = ['$httpProvider'];\n\n  function config($httpProvider) {\n    $httpProvider.interceptors.push('authenticationInterceptor');\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n      $urlRouterProvider.otherwise('/');\n\n      $stateProvider\n        .state('dashboard', {\n          url: '/',\n          templateUrl: 'app/components/dashboard/dashboardView.html',\n          controller: 'dashboardController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('login', {\n          url: '/login',\n          templateUrl: 'app/components/login/loginView.html',\n          controller: 'loginController',\n          controllerAs: 'vm',\n          authenticate: false\n        });\n\n      $stateProvider\n        .state('profile', {\n          url: '/profile',\n          templateUrl: 'app/components/profile/profileView.html',\n          controller: 'profileController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('users', {\n          url: '/users',\n          templateUrl: 'app/components/users/usersView.html',\n          controller: 'usersController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('user', {\n          url: '/user/:id',\n          templateUrl: 'app/components/users/userView.html',\n          controller: 'userController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('players', {\n          url: '/players',\n          templateUrl: 'app/components/players/playersView.html',\n          controller: 'playersController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('player', {\n          url: '/player/:id',\n          templateUrl: 'app/components/players/playerView.html',\n          controller: 'playerController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('nationalRankings', {\n          url: '/nationalRankings',\n          templateUrl: 'app/components/rankings/nationalRankingsView.html',\n          controller: 'nationalRankingsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('nationalRanking', {\n          url: '/nationalRanking/:id',\n          templateUrl: 'app/components/rankings/nationalRankingView.html',\n          controller: 'nationalRankingController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('stateRankings', {\n          url: '/stateRankings',\n          templateUrl: 'app/components/rankings/stateRankingsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('aauRankings', {\n          url: '/aauRankings',\n          templateUrl: 'app/components/rankings/aauRankingsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('articles', {\n          url: '/articles',\n          templateUrl: 'app/components/articles/articlesView.html',\n          controller: 'articlesController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('article', {\n          url: '/article/:id',\n          templateUrl: 'app/components/articles/articleView.html',\n          controller: 'articleController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('videos', {\n          url: '/videos',\n          templateUrl: 'app/components/videos/videosView.html',\n          controller: 'videosController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('video', {\n          url: '/video/:id',\n          templateUrl: 'app/components/videos/videoView.html',\n          controller: 'videoController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('events', {\n          url: '/events',\n          templateUrl: 'app/components/events/eventsView.html',\n          controller: 'eventsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('event', {\n          url: '/event/:id',\n          templateUrl: 'app/components/events/eventView.html',\n          controller: 'eventController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('merchandise', {\n          url: '/merchandise',\n          templateUrl: 'app/components/merchandise/merchandiseView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('colleges', {\n          url: '/colleges',\n          templateUrl: 'app/components/colleges/collegesView.html',\n          controller: 'collegesController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('college', {\n          url: '/college/:id',\n          templateUrl: 'app/components/colleges/collegeView.html',\n          controller: 'collegeController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('ads', {\n          url: '/ads',\n          templateUrl: 'app/components/ads/adsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('contacts', {\n          url: '/contacts',\n          templateUrl: 'app/components/contacts/contactsView.html',\n          controller: 'contactsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('contact', {\n          url: '/contact/:id',\n          templateUrl: 'app/components/contacts/contactView.html',\n          controller: 'contactController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('alumni', {\n          url: '/alumni',\n          templateUrl: 'app/components/alumni/alumniView.html',\n          authenticate: true\n        });\n    }]);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .run(authenticate);\n\n  authenticate.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function authenticate($rootScope, $state, authenticationService) {\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n      if (toState.authenticate && !authenticationService.isAuthenticated()) {\n        $state.go('login');\n        event.preventDefault();\n      }\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('articleController', articleController);\n\n  articleController.$inject = ['$stateParams', '$state', 'articlesService'];\n\n  function articleController($stateParams, $state, articlesService) {\n    var vm = this;\n    vm.save = save;\n\n    if ($stateParams.id) {\n      articlesService.getById($stateParams.id).then(function(article) {\n        article.createdDate = article.createdDate || new Date();\n        vm.article = article;\n      });\n    }\n\n    function save(article) {\n      articlesService.save(article).then(function() {\n        $state.go('articles');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('articlesController', articlesController);\n\n  articlesController.$inject = ['$scope', 'articlesService'];\n\n  function articlesController($scope, articlesService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      articlesService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.articles = result.articles;\n        vm.count = result.count;\n        vm.start = (vm.page - 1) * vm.pageSize + 1;\n        vm.end = (vm.start + vm.pageSize < result.count) ? (vm.page - 1) * vm.pageSize + vm.pageSize : result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('articlesService', articlesService);\n\n  articlesService.$inject = ['$http', 'config'];\n\n  function articlesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/articles', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/articles/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(article) {\n      if (article._id) {\n        return $http.put(config.baseApiUrl + '/articles/' + article._id, article);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/articles', article);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('authenticationService', authenticationService);\n\n  authenticationService.$inject = ['$http', 'config', 'localStorageService'];\n\n  function authenticationService($http, config, localStorageService) {\n    var user;\n\n    var service = {\n      login: login,\n      logout: logout,\n      getCurrentUser: getCurrentUser,\n      isAuthenticated: isAuthenticated,\n      getAuthToken: getAuthToken\n    };\n    return service;\n\n    function login(user) {\n      return $http.post(config.baseApiUrl + '/token', user).then(function(result) {\n        localStorageService.set('token', result.data.token);\n        return updateCurrentUser();\n      });\n    }\n\n    function logout() {\n      localStorageService.remove('token');\n      localStorageService.remove('user');\n    }\n\n    function getCurrentUser() {\n      return localStorageService.get('user');\n    }\n\n    function updateCurrentUser() {\n      return $http.get(config.baseApiUrl + '/profile').then(function(result) {\n        result.data.user.profileImageUrl = result.data.user.profileImageUrl || config.defaultProfileImageUrl;\n        localStorageService.set('user', result.data.user);\n      });\n    }\n\n    function isAuthenticated() {\n      return !!getCurrentUser();\n    }\n\n    function getAuthToken() {\n      return localStorageService.get('token');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('authenticationInterceptor', authenticationInterceptor);\n\n  authenticationInterceptor.$inject = ['config', '$injector'];\n\n  function authenticationInterceptor(globalConfig, $injector) {\n    return {\n      request: function(config) {\n        var authenticationService = $injector.get('authenticationService'),\n          token = authenticationService.getAuthToken();\n        if (config.url.indexOf(globalConfig.baseApiUrl) === 0 && token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n        return config;\n      }\n    };\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('collegeController', collegeController);\n\n  collegeController.$inject = ['$stateParams', '$state', 'collegesService'];\n\n  function collegeController($stateParams, $state, collegesService) {\n    var vm = this;\n    vm.save = save;\n\n    collegesService.getById($stateParams.id).then(function(college) {\n      vm.college = college;\n    });\n\n    function save(college) {\n      collegesService.save(college).then(function() {\n        $state.go('colleges');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('collegesController', collegesController);\n\n  collegesController.$inject = ['$scope', 'collegesService'];\n\n  function collegesController($scope, collegesService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      collegesService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.colleges = result.colleges;\n        vm.count = result.count;\n        vm.start = (vm.page - 1) * vm.pageSize + 1;\n        vm.end = (vm.start + vm.pageSize < result.count) ? (vm.page - 1) * vm.pageSize + vm.pageSize : result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('collegesService', collegesService);\n\n  collegesService.$inject = ['$http', 'config'];\n\n  function collegesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/colleges', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/colleges/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(college) {\n      if (college._id) {\n        return $http.put(config.baseApiUrl + '/colleges/' + college._id, college);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/colleges', college);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('contactController', contactController);\n\n  contactController.$inject = ['$stateParams', '$state', 'contactsService'];\n\n  function contactController($stateParams, $state, contactsService) {\n    var vm = this;\n    vm.save = save;\n\n    contactsService.getById($stateParams.id).then(function(contact) {\n      contact.profileImageUrl = contact.profileImageUrl || '/assets/img/profile.png';\n      vm.contact = contact;\n    });\n\n    function save(contact) {\n      contactsService.save(contact).then(function() {\n        $state.go('contacts');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('contactsController', contactsController);\n\n  contactsController.$inject = ['$scope', 'contactsService'];\n\n  function contactsController($scope, contactsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      contactsService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.contacts = result.contacts;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('contactsService', contactsService);\n\n  contactsService.$inject = ['$http', 'config'];\n\n  function contactsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/contacts', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/contacts/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(contact) {\n      if (contact._id) {\n        return $http.put(config.baseApiUrl + '/contacts/' + contact._id, contact);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/contacts', contact);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('dashboardController', dashboardController);\n\n  dashboardController.$inject = [];\n\n  function dashboardController() {\n    var vm = this;\n\n    vm.labels = ['January', 'February', 'March', 'April', 'May'];\n    vm.series = ['Tournaments', 'Camps', 'Website'];\n\n    vm.data = [\n      [300, 759, 480, 381, 156],\n      [928, 448, 420, 300, 846],\n      [258, 300, 430, 149, 686]\n    ];\n\n    vm.labels2 = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    vm.data2 = [300, 500, 100];\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('eventController', eventController);\n\n  eventController.$inject = ['$stateParams', '$state', 'eventsService'];\n\n  function eventController($stateParams, $state, eventsService) {\n    var vm = this;\n    vm.save = save;\n\n    eventsService.getById($stateParams.id).then(function(event) {\n      vm.event = event;\n    });\n\n    function save(event) {\n      eventsService.save(event).then(function() {\n        $state.go('events');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('eventsController', eventsController);\n\n  eventsController.$inject = ['$scope', 'eventsService'];\n\n  function eventsController($scope, eventsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      eventsService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.events = result.events;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('eventsService', eventsService);\n\n  eventsService.$inject = ['$http', 'config'];\n\n  function eventsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/events', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/events/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(event) {\n      if (event._id) {\n        return $http.put(config.baseApiUrl + '/events/' + event._id, event);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/events', event);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('loginController', loginController);\n\n  loginController.$inject = ['$state', 'authenticationService'];\n\n  function loginController($state, authenticationService) {\n    var vm = this;\n    vm.login = login;\n\n    function login(user) {\n      authenticationService.login(user).then(function() {\n        $state.go('dashboard');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('navigationController', navigationController);\n\n  navigationController.$inject = ['$scope', '$state', 'authenticationService'];\n\n  function navigationController($scope, $state, authenticationService) {\n    var vm = this;\n    vm.logout = logout;\n\n    $scope.$watch(authenticationService.isAuthenticated, function(newValue, oldValue) {\n      vm.user = authenticationService.getCurrentUser();\n    });\n\n    function logout() {\n      authenticationService.logout();\n      $state.go('login');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('userController', userController);\n\n  userController.$inject = ['$stateParams', '$state', 'usersService'];\n\n  function userController($stateParams, $state, usersService) {\n    var vm = this;\n    vm.save = save;\n\n    activate();\n\n    function activate() {\n      usersService.getById($stateParams.id).then(function(user) {\n        vm.user = user;\n      });\n    }\n\n    function save(user) {\n      usersService.save(user).then(function() {\n        $state.go('users');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('usersController', usersController);\n\n  usersController.$inject = ['$scope', 'usersService'];\n\n  function usersController($scope, usersService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      usersService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.users = result.users;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('usersService', usersService);\n\n  usersService.$inject = ['$http', 'config'];\n\n  function usersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/users', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/users/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(user) {\n      if (user._id) {\n        return $http.put(config.baseApiUrl + '/users/' + user._id, user);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/users', user);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('nationalRankingController', nationalRankingController);\n\n  nationalRankingController.$inject = ['$stateParams', '$state', 'config', 'rankingsService', 'playersService'];\n\n  function nationalRankingController($stateParams, $state, config, rankingsService, playersService) {\n    var vm = this;\n    vm.save = save;\n    vm.refreshPlayers = refreshPlayers;\n    vm.add = add;\n    vm.remove = remove;\n    vm.sortableOptions = {\n      stop: update,\n      items: '.list-group-item:not(.unsortable)',\n      cursor: 'move'\n    };\n    vm.rankYears = [];\n    for (var i = config.currentRankingYear; i <= config.lastRankingYear; i++) {\n      vm.rankYears.push(i);\n    }\n    var nextRanking = 1;\n\n    activate();\n\n    function activate() {\n      rankingsService.getById($stateParams.id).then(function(ranking) {\n        vm.ranking = ranking;\n        nextRanking = ranking.players.length + 1;\n      });\n    }\n\n    function save(ranking) {\n      rankingsService.save(ranking).then(function() {\n        $state.go('nationalRankings');\n      });\n    }\n\n    function refreshPlayers(q) {\n      playersService.getAll(q).then(function(result) {\n        vm.players = result.players;\n      });\n    }\n\n    function add(player) {\n      var playerRanking = {\n        rank: nextRanking,\n        player: player\n      };\n      vm.ranking.players.push(playerRanking);\n      nextRanking = nextRanking + 1;\n    }\n\n    function remove(player) {\n      var indexToRemove = vm.ranking.players.indexOf(player);\n      vm.ranking.players.splice(indexToRemove, 1);\n      nextRanking = nextRanking - 1;\n    }\n\n    function update() {\n      vm.ranking.players.forEach(function (playerRanking, i) {\n        playerRanking.rank = i + 1;\n        return playerRanking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('nationalRankingsController', nationalRankingsController);\n\n  nationalRankingsController.$inject = ['$scope', 'rankingsService'];\n\n  function nationalRankingsController($scope, rankingsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      rankingsService.getAll('national', vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.rankings = result.rankings;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('rankingsService', rankingsService);\n\n  rankingsService.$inject = ['$http', 'config'];\n\n  function rankingsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(type, q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/rankings/' + type, { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/rankings/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(ranking) {\n      if (ranking._id) {\n        return $http.put(config.baseApiUrl + '/rankings/' + ranking._id, ranking);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/rankings', ranking);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('profileController', profileController);\n\n  profileController.$inject = ['$stateParams', '$state', 'authenticationService'];\n\n  function profileController($stateParams, $state, authenticationService) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.user = authenticationService.getCurrentUser();\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('videoController', videoController);\n\n  videoController.$inject = ['$stateParams', '$state', 'videosService'];\n\n  function videoController($stateParams, $state, videosService) {\n    var vm = this;\n    vm.save = save;\n\n    videosService.getById($stateParams.id).then(function(video) {\n      vm.video = video;\n    });\n\n    function save(video) {\n      videosService.save(video).then(function() {\n        $state.go('videos');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('videosController', videosController);\n\n  videosController.$inject = ['$scope', 'videosService'];\n\n  function videosController($scope, videosService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      videosService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.videos = result.videos;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('videosService', videosService);\n\n  videosService.$inject = ['$http', 'config'];\n\n  function videosService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/videos', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/videos/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(video) {\n      if (video._id) {\n        return $http.put(config.baseApiUrl + '/videos/' + video._id, video);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/videos', video);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('playerController', playerController);\n\n  playerController.$inject = ['$stateParams', '$state', 'playersService'];\n\n  function playerController($stateParams, $state, playersService) {\n    var vm = this;\n    vm.save = save;\n\n    activate();\n\n    function activate() {\n      playersService.getById($stateParams.id).then(function(player) {\n        player.imageUrl = player.imageUrl || '/assets/img/profile.png';\n        vm.player = player;\n      });\n    }\n\n    function save(player) {\n      playersService.save(player).then(function() {\n        $state.go('players');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('playersController', playersController);\n\n  playersController.$inject = ['$scope', 'playersService'];\n\n  function playersController($scope, playersService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      playersService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.players = result.players;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('playersService', playersService);\n\n  playersService.$inject = ['$http', 'config'];\n\n  function playersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/players/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(player) {\n      if (player._id) {\n        return $http.put(config.baseApiUrl + '/players/' + player._id, player);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/players', player);\n      }\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}