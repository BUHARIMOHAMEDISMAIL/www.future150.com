{"version":3,"sources":["../../public/admin/app/app.module.js","../../public/admin/app/app.config.js","../../public/admin/app/app.routes.js","../../public/admin/app/app.run.js","../../public/admin/app/components/articles/article.controller.js","../../public/admin/app/components/articles/articles.controller.js","../../public/admin/app/components/articles/articles.service.js","../../public/admin/app/components/authentication/authentication.service.js","../../public/admin/app/components/authentication/authenticationInterceptor.factory.js","../../public/admin/app/components/camps/camp.controller.js","../../public/admin/app/components/camps/camps.controller.js","../../public/admin/app/components/camps/camps.service.js","../../public/admin/app/components/colleges/college.controller.js","../../public/admin/app/components/colleges/colleges.controller.js","../../public/admin/app/components/colleges/colleges.service.js","../../public/admin/app/components/contacts/contact.controller.js","../../public/admin/app/components/contacts/contacts.controller.js","../../public/admin/app/components/contacts/contacts.service.js","../../public/admin/app/components/dashboard/dashboard.controller.js","../../public/admin/app/components/login/login.controller.js","../../public/admin/app/components/navigation/navigation.controller.js","../../public/admin/app/components/players/player.controller.js","../../public/admin/app/components/players/players.controller.js","../../public/admin/app/components/players/players.service.js","../../public/admin/app/components/profile/profile.controller.js","../../public/admin/app/components/rankings/nationalRanking.controller.js","../../public/admin/app/components/rankings/nationalRankings.controller.js","../../public/admin/app/components/rankings/rankings.service.js","../../public/admin/app/components/tournaments/tournament.controller.js","../../public/admin/app/components/tournaments/tournaments.controller.js","../../public/admin/app/components/tournaments/tournaments.service.js","../../public/admin/app/components/users/user.controller.js","../../public/admin/app/components/users/users.controller.js","../../public/admin/app/components/users/users.service.js","../../public/admin/app/components/videos/video.controller.js","../../public/admin/app/components/videos/videos.controller.js","../../public/admin/app/components/videos/videos.service.js"],"names":["angular","module","config","$httpProvider","interceptors","push","constant","baseApiUrl","currentRankingYear","lastRankingYear","defaultProfileImageUrl","$inject","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","authenticate","$rootScope","$state","authenticationService","$on","event","toState","toParams","fromState","fromParams","isAuthenticated","go","preventDefault","run","articleController","$stateParams","articlesService","save","article","then","vm","this","id","getById","createdDate","Date","articlesController","$scope","activate","getAll","q","page","pageSize","result","articles","count","start","end","$watchGroup","$http","params","get","data","_id","put","post","service","factory","localStorageService","login","user","set","token","updateCurrentUser","logout","remove","getCurrentUser","profileImageUrl","getAuthToken","authenticationInterceptor","$injector","request","headers","Authorization","campController","campsService","camp","campsController","camps","collegeController","collegesService","college","collegesController","colleges","contactController","contactsService","contact","contactsController","contacts","dashboardController","labels","series","labels2","data2","loginController","navigationController","$watch","newValue","oldValue","playerController","$sce","playersService","player","imageUrl","notes","forEach","note","noteHtml","trustAsHtml","strengths","map","strength","text","needsToImprove","needToImprove","addCollege","newCollege","removeCollege","_","without","findWhere","addNote","newNote","author","removeNote","loadStrengths","loadImprovements","playersController","players","profileController","nationalRankingController","rankingsService","ranking","nextRanking","length","type","refreshPlayers","add","playerRanking","rank","indexToRemove","indexOf","splice","update","i","sortableOptions","stop","items","cursor","rankYears","nationalRankingsController","rankings","tournamentController","tournamentsService","tournament","tournamentsController","tournaments","userController","usersService","usersController","users","videoController","videosService","video","videosController","videos"],"mappings":"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","file":"future150-admin.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin', ['ui.router', 'ui.bootstrap', 'ui.select', 'ui.sortable',\n      'summernote', 'LocalStorageModule', 'chart.js', 'checklist-model', 'ngTagsInput']);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .constant('config', {\n      baseApiUrl: '',\n      currentRankingYear: 2015,\n      lastRankingYear: 2020,\n      defaultProfileImageUrl: '//placehold.it/160x160?text=No Image'\n    });\n\n  angular\n    .module('future150Admin')\n    .config(config);\n\n  config.$inject = ['$httpProvider'];\n\n  function config($httpProvider) {\n    $httpProvider.interceptors.push('authenticationInterceptor');\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {\n      $urlRouterProvider.otherwise('/');\n\n      $stateProvider\n        .state('dashboard', {\n          url: '/',\n          templateUrl: 'app/components/dashboard/dashboardView.html',\n          controller: 'dashboardController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('login', {\n          url: '/login',\n          templateUrl: 'app/components/login/loginView.html',\n          controller: 'loginController',\n          controllerAs: 'vm',\n          authenticate: false\n        });\n\n      $stateProvider\n        .state('profile', {\n          url: '/profile',\n          templateUrl: 'app/components/profile/profileView.html',\n          controller: 'profileController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('users', {\n          url: '/users',\n          templateUrl: 'app/components/users/usersView.html',\n          controller: 'usersController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('user', {\n          url: '/user/:id',\n          templateUrl: 'app/components/users/userView.html',\n          controller: 'userController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('players', {\n          url: '/players',\n          templateUrl: 'app/components/players/playersView.html',\n          controller: 'playersController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('player', {\n          url: '/player/:id',\n          templateUrl: 'app/components/players/playerView.html',\n          controller: 'playerController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('nationalRankings', {\n          url: '/nationalRankings',\n          templateUrl: 'app/components/rankings/nationalRankingsView.html',\n          controller: 'nationalRankingsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('nationalRanking', {\n          url: '/nationalRanking/:id',\n          templateUrl: 'app/components/rankings/nationalRankingView.html',\n          controller: 'nationalRankingController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('stateRankings', {\n          url: '/stateRankings',\n          templateUrl: 'app/components/rankings/stateRankingsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('aauRankings', {\n          url: '/aauRankings',\n          templateUrl: 'app/components/rankings/aauRankingsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('articles', {\n          url: '/articles',\n          templateUrl: 'app/components/articles/articlesView.html',\n          controller: 'articlesController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('article', {\n          url: '/article/:id',\n          templateUrl: 'app/components/articles/articleView.html',\n          controller: 'articleController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('videos', {\n          url: '/videos',\n          templateUrl: 'app/components/videos/videosView.html',\n          controller: 'videosController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('video', {\n          url: '/video/:id',\n          templateUrl: 'app/components/videos/videoView.html',\n          controller: 'videoController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('camps', {\n          url: '/camps',\n          templateUrl: 'app/components/camps/campsView.html',\n          controller: 'campsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('camp', {\n          url: '/camp/:id',\n          templateUrl: 'app/components/camps/campView.html',\n          controller: 'campController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('tournaments', {\n          url: '/tournaments',\n          templateUrl: 'app/components/tournaments/tournamentsView.html',\n          controller: 'tournamentsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('tournament', {\n          url: '/tournament/:id',\n          templateUrl: 'app/components/tournaments/tournamentView.html',\n          controller: 'tournamentController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('merchandise', {\n          url: '/merchandise',\n          templateUrl: 'app/components/merchandise/merchandiseView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('colleges', {\n          url: '/colleges',\n          templateUrl: 'app/components/colleges/collegesView.html',\n          controller: 'collegesController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('college', {\n          url: '/college/:id',\n          templateUrl: 'app/components/colleges/collegeView.html',\n          controller: 'collegeController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('ads', {\n          url: '/ads',\n          templateUrl: 'app/components/ads/adsView.html',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('contacts', {\n          url: '/contacts',\n          templateUrl: 'app/components/contacts/contactsView.html',\n          controller: 'contactsController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('contact', {\n          url: '/contact/:id',\n          templateUrl: 'app/components/contacts/contactView.html',\n          controller: 'contactController',\n          controllerAs: 'vm',\n          authenticate: true\n        });\n\n      $stateProvider\n        .state('alumni', {\n          url: '/alumni',\n          templateUrl: 'app/components/alumni/alumniView.html',\n          authenticate: true\n        });\n    }]);\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .run(authenticate);\n\n  authenticate.$inject = ['$rootScope', '$state', 'authenticationService'];\n\n  function authenticate($rootScope, $state, authenticationService) {\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n      if (toState.authenticate && !authenticationService.isAuthenticated()) {\n        $state.go('login');\n        event.preventDefault();\n      }\n    });\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('articleController', articleController);\n\n  articleController.$inject = ['$stateParams', '$state', 'articlesService'];\n\n  function articleController($stateParams, $state, articlesService) {\n    var vm = this;\n    vm.save = save;\n\n    if ($stateParams.id) {\n      articlesService.getById($stateParams.id).then(function(article) {\n        article.createdDate = article.createdDate || new Date();\n        vm.article = article;\n      });\n    }\n\n    function save(article) {\n      articlesService.save(article).then(function() {\n        $state.go('articles');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('articlesController', articlesController);\n\n  articlesController.$inject = ['$scope', 'articlesService'];\n\n  function articlesController($scope, articlesService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      articlesService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.articles = result.articles;\n        vm.count = result.count;\n        vm.start = (vm.page - 1) * vm.pageSize + 1;\n        vm.end = (vm.start + vm.pageSize < result.count) ? (vm.page - 1) * vm.pageSize + vm.pageSize : result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('articlesService', articlesService);\n\n  articlesService.$inject = ['$http', 'config'];\n\n  function articlesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/articles', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/articles/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(article) {\n      if (article._id) {\n        return $http.put(config.baseApiUrl + '/articles/' + article._id, article);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/articles', article);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('authenticationService', authenticationService);\n\n  authenticationService.$inject = ['$http', 'config', 'localStorageService'];\n\n  function authenticationService($http, config, localStorageService) {\n    var user;\n\n    var service = {\n      login: login,\n      logout: logout,\n      getCurrentUser: getCurrentUser,\n      isAuthenticated: isAuthenticated,\n      getAuthToken: getAuthToken\n    };\n    return service;\n\n    function login(user) {\n      return $http.post(config.baseApiUrl + '/token', user).then(function(result) {\n        localStorageService.set('token', result.data.token);\n        return updateCurrentUser();\n      });\n    }\n\n    function logout() {\n      localStorageService.remove('token');\n      localStorageService.remove('user');\n    }\n\n    function getCurrentUser() {\n      return localStorageService.get('user');\n    }\n\n    function updateCurrentUser() {\n      return $http.get(config.baseApiUrl + '/profile').then(function(result) {\n        result.data.user.profileImageUrl = result.data.user.profileImageUrl || config.defaultProfileImageUrl;\n        localStorageService.set('user', result.data.user);\n      });\n    }\n\n    function isAuthenticated() {\n      return !!getCurrentUser();\n    }\n\n    function getAuthToken() {\n      return localStorageService.get('token');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('authenticationInterceptor', authenticationInterceptor);\n\n  authenticationInterceptor.$inject = ['$injector'];\n\n  function authenticationInterceptor($injector) {\n    return {\n      request: function(config) {\n        var authenticationService = $injector.get('authenticationService'),\n          token = authenticationService.getAuthToken();\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n        return config;\n      }\n    };\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('campController', campController);\n\n  campController.$inject = ['$stateParams', '$state', 'campsService'];\n\n  function campController($stateParams, $state, campsService) {\n    var vm = this;\n    vm.save = save;\n\n    campsService.getById($stateParams.id).then(function(camp) {\n      vm.camp = camp;\n    });\n\n    function save(camp) {\n      campsService.save(camp).then(function() {\n        $state.go('camps');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('campsController', campsController);\n\n  campsController.$inject = ['$scope', 'campsService'];\n\n  function campsController($scope, campsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      campsService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.camps = result.camps;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('campsService', campsService);\n\n  campsService.$inject = ['$http', 'config'];\n\n  function campsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/camps', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/camps/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(camp) {\n      if (camp._id) {\n        return $http.put(config.baseApiUrl + '/camps/' + camp._id, camp);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/camps', camp);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('collegeController', collegeController);\n\n  collegeController.$inject = ['$stateParams', '$state', 'collegesService'];\n\n  function collegeController($stateParams, $state, collegesService) {\n    var vm = this;\n    vm.save = save;\n\n    collegesService.getById($stateParams.id).then(function(college) {\n      vm.college = college;\n    });\n\n    function save(college) {\n      collegesService.save(college).then(function() {\n        $state.go('colleges');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('collegesController', collegesController);\n\n  collegesController.$inject = ['$scope', 'collegesService'];\n\n  function collegesController($scope, collegesService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      collegesService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.colleges = result.colleges;\n        vm.count = result.count;\n        vm.start = (vm.page - 1) * vm.pageSize + 1;\n        vm.end = (vm.start + vm.pageSize < result.count) ? (vm.page - 1) * vm.pageSize + vm.pageSize : result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('collegesService', collegesService);\n\n  collegesService.$inject = ['$http', 'config'];\n\n  function collegesService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/colleges', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/colleges/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(college) {\n      if (college._id) {\n        return $http.put(config.baseApiUrl + '/colleges/' + college._id, college);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/colleges', college);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('contactController', contactController);\n\n  contactController.$inject = ['$stateParams', '$state', 'contactsService'];\n\n  function contactController($stateParams, $state, contactsService) {\n    var vm = this;\n    vm.save = save;\n\n    contactsService.getById($stateParams.id).then(function(contact) {\n      contact.profileImageUrl = contact.profileImageUrl || '/assets/img/profile.png';\n      vm.contact = contact;\n    });\n\n    function save(contact) {\n      contactsService.save(contact).then(function() {\n        $state.go('contacts');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('contactsController', contactsController);\n\n  contactsController.$inject = ['$scope', 'contactsService'];\n\n  function contactsController($scope, contactsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      contactsService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.contacts = result.contacts;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('contactsService', contactsService);\n\n  contactsService.$inject = ['$http', 'config'];\n\n  function contactsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/contacts', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/contacts/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(contact) {\n      if (contact._id) {\n        return $http.put(config.baseApiUrl + '/contacts/' + contact._id, contact);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/contacts', contact);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('dashboardController', dashboardController);\n\n  dashboardController.$inject = [];\n\n  function dashboardController() {\n    var vm = this;\n\n    vm.labels = ['January', 'February', 'March', 'April', 'May'];\n    vm.series = ['Tournaments', 'Camps', 'Website'];\n\n    vm.data = [\n      [300, 759, 480, 381, 156],\n      [928, 448, 420, 300, 846],\n      [258, 300, 430, 149, 686]\n    ];\n\n    vm.labels2 = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    vm.data2 = [300, 500, 100];\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('loginController', loginController);\n\n  loginController.$inject = ['$state', 'authenticationService'];\n\n  function loginController($state, authenticationService) {\n    var vm = this;\n    vm.login = login;\n\n    function login(user) {\n      authenticationService.login(user).then(function() {\n        $state.go('dashboard');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('navigationController', navigationController);\n\n  navigationController.$inject = ['$scope', '$state', 'authenticationService'];\n\n  function navigationController($scope, $state, authenticationService) {\n    var vm = this;\n    vm.logout = logout;\n\n    $scope.$watch(authenticationService.isAuthenticated, function(newValue, oldValue) {\n      vm.user = authenticationService.getCurrentUser();\n    });\n\n    function logout() {\n      authenticationService.logout();\n      $state.go('login');\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('playerController', playerController);\n\n  playerController.$inject = ['$stateParams', '$state', '$sce', 'playersService', 'collegesService', 'authenticationService'];\n\n  function playerController($stateParams, $state, $sce, playersService, collegesService, authenticationService) {\n    var vm = this;\n    vm.save = save;\n    vm.addCollege = addCollege;\n    vm.removeCollege = removeCollege;\n    vm.addNote = addNote;\n    vm.removeNote = removeNote;\n    vm.loadStrengths = loadStrengths;\n    vm.loadImprovements = loadImprovements;\n    vm.newNote = {\n      createdDate: new Date(),\n      author: authenticationService.getCurrentUser()\n    };\n    vm.newCollege = {};\n\n    activate();\n\n    function activate() {\n      playersService.getById($stateParams.id).then(function(player) {\n        player.imageUrl = player.imageUrl || '/assets/img/profile.png';\n        player.notes.forEach(function(note) {\n          note.noteHtml = $sce.trustAsHtml(note.note);\n        });\n        vm.player = player;\n      });\n      collegesService.getAll().then(function(result) {\n        vm.colleges = result.colleges;\n      });\n    }\n\n    function save(player) {\n      player.strengths = player.strengths.map(function(strength) { return strength.text; });\n      player.needsToImprove = player.needsToImprove.map(function(needToImprove) { return needToImprove.text; });\n      playersService.save(player).then(function() {\n        $state.go('players');\n      });\n    }\n\n    function addCollege(college) {\n      vm.player.colleges.push(college);\n      vm.newCollege = {};\n    }\n\n    function removeCollege(college) {\n      vm.player.colleges = _.without(vm.player.colleges, _.findWhere(vm.player.colleges, college));\n    }\n\n    function addNote(note) {\n      note.noteHtml = $sce.trustAsHtml(note.note);\n      vm.player.notes.push(note);\n      vm.newNote = {\n        createdDate: new Date(),\n        author: {}\n      };\n    }\n\n    function removeNote(note) {\n      vm.player.notes = _.without(vm.player.notes, _.findWhere(vm.player.notes, note));\n    }\n\n    function loadStrengths() {\n      return ['3pt Shooting', 'Agility'];\n    }\n\n    function loadImprovements() {\n      return ['Playing Without the Ball', 'Transition Vision'];\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('playersController', playersController);\n\n  playersController.$inject = ['$scope', 'playersService'];\n\n  function playersController($scope, playersService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      playersService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.players = result.players;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('playersService', playersService);\n\n  playersService.$inject = ['$http', 'config'];\n\n  function playersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/players', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/players/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(player) {\n      if (player._id) {\n        return $http.put(config.baseApiUrl + '/players/' + player._id, player);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/players', player);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('profileController', profileController);\n\n  profileController.$inject = ['$stateParams', '$state', 'authenticationService'];\n\n  function profileController($stateParams, $state, authenticationService) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      vm.user = authenticationService.getCurrentUser();\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('nationalRankingController', nationalRankingController);\n\n  nationalRankingController.$inject = ['$stateParams', '$state', 'config', 'rankingsService', 'playersService'];\n\n  function nationalRankingController($stateParams, $state, config, rankingsService, playersService) {\n    var vm = this;\n    vm.save = save;\n    vm.refreshPlayers = refreshPlayers;\n    vm.add = add;\n    vm.remove = remove;\n    vm.sortableOptions = {\n      stop: update,\n      items: '.list-group-item:not(.unsortable)',\n      cursor: 'move'\n    };\n    vm.rankYears = [];\n    for (var i = config.currentRankingYear; i <= config.lastRankingYear; i++) {\n      vm.rankYears.push(i);\n    }\n    var nextRanking = 1;\n\n    activate();\n\n    function activate() {\n      if ($stateParams.id) {\n        rankingsService.getById($stateParams.id).then(function(ranking) {\n          vm.ranking = ranking;\n          nextRanking = ranking.players.length + 1;\n        });\n      }\n      else {\n        vm.ranking = {\n          type: 'national',\n          players: []\n        };\n      }\n    }\n\n    function save(ranking) {\n      rankingsService.save(ranking).then(function() {\n        $state.go('nationalRankings');\n      });\n    }\n\n    function refreshPlayers(q) {\n      playersService.getAll(q).then(function(result) {\n        vm.players = result.players;\n      });\n    }\n\n    function add(player) {\n      var playerRanking = {\n        rank: nextRanking,\n        player: player\n      };\n      vm.ranking.players.push(playerRanking);\n      nextRanking = nextRanking + 1;\n    }\n\n    function remove(player) {\n      var indexToRemove = vm.ranking.players.indexOf(player);\n      vm.ranking.players.splice(indexToRemove, 1);\n      nextRanking = nextRanking - 1;\n    }\n\n    function update() {\n      vm.ranking.players.forEach(function (playerRanking, i) {\n        playerRanking.rank = i + 1;\n        return playerRanking;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('nationalRankingsController', nationalRankingsController);\n\n  nationalRankingsController.$inject = ['$scope', 'rankingsService'];\n\n  function nationalRankingsController($scope, rankingsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      rankingsService.getAll('national', vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.rankings = result.rankings;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('rankingsService', rankingsService);\n\n  rankingsService.$inject = ['$http', 'config'];\n\n  function rankingsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(type, q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/rankings/' + type, { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/rankings/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(ranking) {\n      if (ranking._id) {\n        return $http.put(config.baseApiUrl + '/rankings/' + ranking._id, ranking);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/rankings', ranking);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('tournamentController', tournamentController);\n\n  tournamentController.$inject = ['$stateParams', '$state', 'tournamentsService'];\n\n  function tournamentController($stateParams, $state, tournamentsService) {\n    var vm = this;\n    vm.save = save;\n\n    tournamentsService.getById($stateParams.id).then(function(tournament) {\n      vm.tournament = tournament;\n    });\n\n    function save(tournament) {\n      tournamentsService.save(tournament).then(function() {\n        $state.go('tournaments');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('tournamentsController', tournamentsController);\n\n  tournamentsController.$inject = ['$scope', 'tournamentsService'];\n\n  function tournamentsController($scope, tournamentsService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      tournamentsService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.tournaments = result.tournaments;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('tournamentsService', tournamentsService);\n\n  tournamentsService.$inject = ['$http', 'config'];\n\n  function tournamentsService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/tournaments', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/tournaments/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(tournament) {\n      if (tournament._id) {\n        return $http.put(config.baseApiUrl + '/tournaments/' + tournament._id, tournament);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/tournaments', tournament);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('userController', userController);\n\n  userController.$inject = ['$stateParams', '$state', 'usersService'];\n\n  function userController($stateParams, $state, usersService) {\n    var vm = this;\n    vm.save = save;\n\n    activate();\n\n    function activate() {\n      usersService.getById($stateParams.id).then(function(user) {\n        vm.user = user;\n      });\n    }\n\n    function save(user) {\n      usersService.save(user).then(function() {\n        $state.go('users');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('usersController', usersController);\n\n  usersController.$inject = ['$scope', 'usersService'];\n\n  function usersController($scope, usersService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      usersService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.users = result.users;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('usersService', usersService);\n\n  usersService.$inject = ['$http', 'config'];\n\n  function usersService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/users', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/users/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(user) {\n      if (user._id) {\n        return $http.put(config.baseApiUrl + '/users/' + user._id, user);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/users', user);\n      }\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('videoController', videoController);\n\n  videoController.$inject = ['$stateParams', '$state', 'videosService'];\n\n  function videoController($stateParams, $state, videosService) {\n    var vm = this;\n    vm.save = save;\n\n    videosService.getById($stateParams.id).then(function(video) {\n      vm.video = video;\n    });\n\n    function save(video) {\n      videosService.save(video).then(function() {\n        $state.go('videos');\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .controller('videosController', videosController);\n\n  videosController.$inject = ['$scope', 'videosService'];\n\n  function videosController($scope, videosService) {\n    var vm = this;\n    vm.q = '';\n    vm.page = 1;\n    vm.pageSize = 10;\n\n    activate();\n    $scope.$watchGroup(['vm.q', 'vm.page'], activate);\n\n    function activate() {\n      videosService.getAll(vm.q, vm.page, vm.pageSize).then(function(result) {\n        vm.videos = result.videos;\n        vm.count = result.count;\n      });\n    }\n  }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('future150Admin')\n    .factory('videosService', videosService);\n\n  videosService.$inject = ['$http', 'config'];\n\n  function videosService($http, config) {\n    var service = {\n      getAll: getAll,\n      getById: getById,\n      save: save\n    };\n    return service;\n\n    function getAll(q, page, pageSize) {\n      var params = {\n        q: q,\n        page: page,\n        pageSize: pageSize\n      };\n      return $http.get(config.baseApiUrl + '/videos', { params: params }).then(function(result) {\n        return result.data;\n      });\n    }\n    function getById(id) {\n      return $http.get(config.baseApiUrl + '/videos/' + id).then(function(result) {\n        return result.data;\n      });\n    }\n    function save(video) {\n      if (video._id) {\n        return $http.put(config.baseApiUrl + '/videos/' + video._id, video);\n      }\n      else {\n        return $http.post(config.baseApiUrl + '/videos', video);\n      }\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}